import 'dart:async';
import 'dart:convert';
import 'package:flutter_riverpod/flutter_riverpod.dart';

final apiServiceProvider = Provider<ApiService>((ref) => ApiService());

class ApiService {
  // Simulated streaming API
  Stream<String> sendPromptStream(String prompt) async* {
    // Your hardcoded streamed data

    // final List<String> mockStreamData = [
    //   '{"type": "answer", "answer": ""}',
    //   '{"type": "answer", "answer": "\\n\\n# Professional Introduction"}',
    //   '{"type": "answer", "answer": " Email Template\\n\\nHere"}',
    //   '{"type": "answer", "answer": "\'s an introduction email you"}',
    //   '{"type": "answer", "answer": " can use"}',
    //   '{"type": "answer", "answer": " to reach out to a potential"}',
    //   '{"type": "answer", "answer": " new customer:"}',
    //   '{"type": "answer", "answer": "\\n\\n---\\n\\n**"}',
    //   '{"type": "answer", "answer": "Subject: Introduction an"}',
    //   '{"type": "answer", "answer": "d Solutions That Could Benefit ["}',
    //   '{"type": "answer", "answer": "Company Name]**"}',
    //   '{"type": "answer", "answer": "\\n\\nDear ["}',
    //   '{"type": "answer", "answer": "Recipient\'s Name],"}',
    //   '{"type": "answer", "answer": "\\n\\nI hope this email finds you"}',
    //   '{"type": "answer", "answer": " well.\\n\\nMy name is"}',
    //   '{"type": "answer", "answer": " [Your Name],"}',
    //   '{"type": "answer", "answer": " and I am a"}',
    //   '{"type": "answer", "answer": " [Your Position] at [Your"}',
    //   '{"type": "answer", "answer": " Company]. I came across ["}',
    //   '{"type": "answer", "answer": "Company Name] recently"}',
    //   '{"type": "answer", "answer": " and was particularly impressed by ["}',
    //   '{"type": "answer", "answer": "something specific"}',
    //   '{"type": "answer", "answer": " about their business"}',
    //   '{"type": "answer", "answer": "/recent"}',
    //   '{"type": "answer", "answer": " achievement/news"}',
    //   '{"type": "answer", "answer": "].\\n\\nOur"}',
    //   '{"type": "answer", "answer": " company special"}',
    //   '{"type": "answer", "answer": "ises in providing"}',
    //   '{"type": "answer", "answer": " [brief"}',
    //   '{"type": "answer", "answer": " description of your product/"}',
    //   '{"type": "answer", "answer": "service category"}',
    //   '{"type": "answer", "answer": "], which"}',
    //   '{"type": "answer", "answer": " has helped organisations like [mention"}',
    //   '{"type": "answer", "answer": " 1-2 similar"}',
    //   '{"type": "answer", "answer": " companies or industries"}',
    //   '{"type": "answer", "answer": "] to ["}',
    //   '{"type": "answer", "answer": "achieve specific benefit,"}',
    //   '{"type": "answer", "answer": " e.g.,"}',
    //   '{"type": "answer", "answer": " \\"reduce"}',
    //   '{"type": "answer", "answer": " operational costs by 20"}',
    //   '{"type": "answer", "answer": "%\\" or \\"increase"}',
    //   '{"type": "answer", "answer": " customer engagement by 35"}',
    //   '{"type": "answer", "answer": "%\\"].\\n\\nOur"}',
    //   '{"type": "answer", "answer": " core offerings"}',
    //   '{"type": "answer", "answer": " include:\\n\\n*"}',
    //   '{"type": "answer", "answer": " **[Product/"}',
    //   '{"type": "answer", "answer": "Service 1]**:"}',
    //   '{"type": "answer", "answer": " [Brief description highlighting"}',
    //   '{"type": "answer", "answer": " key benefit]\\n* **"}',
    //   '{"type": "answer", "answer": "[Product/Service"}',
    //   '{"type": "answer", "answer": " 2]**:"}',
    //   '{"type": "answer", "answer": " [Brief description highlighting"}',
    //   '{"type": "answer", "answer": " key benefit]"}',
    //   '{"type": "answer", "answer": "\\n* **[Product"}',
    //   '{"type": "answer", "answer": "/Service 3"}',
    //   '{"type": "answer", "answer": "]**: [Brief"}',
    //   '{"type": "answer", "answer": " description highlighting key benefit"}',
    //   '{"type": "answer", "answer": "]\\n\\nI believe"}',
    //   '{"type": "answer", "answer": " our [specific"}',
    //   '{"type": "answer", "answer": " product] could particularly help"}',
    //   '{"type": "answer", "answer": " with [specific"}',
    //   '{"type": "answer", "answer": " challenge or opportunity the"}',
    //   '{"type": "answer", "answer": " prospect might have]."}',
    //   '{"type": "answer", "answer": "\\n\\nI\'d welcome"}',
    //   '{"type": "answer", "answer": " the opportunity to schedule a brief"}',
    //   '{"type": "answer", "answer": " 15-minute call to"}',
    //   '{"type": "answer", "answer": " learn more about your current"}',
    //   '{"type": "answer", "answer": " needs and discuss"}',
    //   '{"type": "answer", "answer": " how our solutions might"}',
    //   '{"type": "answer", "answer": " align with your objectives"}',
    //   '{"type": "answer", "answer": ". Would you be available"}',
    //   '{"type": "answer", "answer": " next [day]"}',
    //   '{"type": "answer", "answer": " at [time]"}',
    //   '{"type": "answer", "answer": " or [alternative day"}',
    //   '{"type": "answer", "answer": "] at [alternative"}',
    //   '{"type": "answer", "answer": " time]?"}',
    //   '{"type": "answer", "answer": "\\n\\nAlternatively, I"}',
    //   '{"type": "answer", "answer": "\'m happy to share"}',
    //   '{"type": "answer", "answer": " more information via email if"}',
    //   '{"type": "answer", "answer": " you prefer.\\n\\nThank"}',
    //   '{"type": "answer", "answer": " you for your time"}',
    //   '{"type": "answer", "answer": ", and I look forwar"}',
    //   '{"type": "answer", "answer": "d to potentially working"}',
    //   '{"type": "answer", "answer": " together.\\n\\nKin"}',
    //   '{"type": "answer", "answer": "d regards,\\n\\n[Your Name]"}',
    //   '{"type": "answer", "answer": "\\n[Your Title"}',
    //   '{"type": "answer", "answer": "]\\n[Your Company]"}',
    //   '{"type": "answer", "answer": "\\n[Your Contact Information"}',
    //   '{"type": "answer", "answer": "]\\n[LinkedIn"}',
    //   '{"type": "answer", "answer": " Profile/Company"}',
    //   '{"type": "answer", "answer": " Website]\\n\\n---"}',
    //   '{"type": "answer", "answer": "\\n\\nFeel free to personal"}',
    //   '{"type": "answer", "answer": "ise this template by"}',
    //   '{"type": "answer", "answer": ":\\n\\n1"}',
    //   '{"type": "answer", "answer": ". Resear"}',
    //   '{"type": "answer", "answer": "ching the prospect\'s company before"}',
    //   '{"type": "answer", "answer": " sending to include"}',
    //   '{"type": "answer", "answer": " relevant details"}',
    //   '{"type": "answer", "answer": "\\n2. Ment"}',
    //   '{"type": "answer", "answer": "ioning any mutual connections or refer"}',
    //   '{"type": "answer", "answer": "rals\\n3"}',
    //   '{"type": "answer", "answer": ". Refer"}',
    //   '{"type": "answer", "answer": "encing recent company"}',
    //   '{"type": "answer", "answer": " news or achievements"}',
    //   '{"type": "answer", "answer": "\\n4. Tail"}',
    //   '{"type": "answer", "answer": "oring the product"}',
    //   '{"type": "answer", "answer": " benefits to address"}',
    //   '{"type": "answer", "answer": " their specific industry"}',
    //   '{"type": "answer", "answer": " challenges\\n\\nWoul"}',
    //   '{"type": "answer", "answer": "d you like me to"}',
    //   '{"type": "answer", "answer": " custom"}',
    //   '{"type": "answer", "answer": "ise this template further"}',
    //   '{"type": "answer", "answer": " for your specific industry"}',
    //   '{"type": "answer", "answer": " or products"}',
    //   '{"type": "answer", "answer": "?"}',
    //   '{"type": "answer", "answer": ""}'
    // ];



  // Future<String> sendPrompt(String prompt) async {
  //   final response = await http.post(
  //     Uri.parse(baseUrl),
  //     headers: {
  //       'Authorization': 'Bearer $apiKey',
  //       'Content-Type': 'application/json',
  //     },
  //     body: json.encode({
  //       "model": "gpt-3.5-turbo",
  //       "messages": [
  //         {"role": "user", "content": prompt}
  //       ]
  //     }),
  //   );

    // final List<String> mockStreamData = [
    //   '{"type": "answer", "answer": ""}',
    //   '{"type": "answer", "answer": " \\n\\n"}',
    //   '{"type": "answer", "answer": "Here"}',
    //   '{"type": "answer", "answer": "\\u2019s"}',
    //   '{"type": "answer", "answer": " a"}',
    //   '{"type": "answer", "answer": " simple"}',
    //   '{"type": "answer", "answer": " Python"}',
    //   '{"type": "answer", "answer": " example"}',
    //   '{"type": "answer", "answer": " that"}',
    //   '{"type": "answer", "answer": " demonstrates"}',
    //   '{"type": "answer", "answer": " a"}',
    //   '{"type": "answer", "answer": " basic"}',
    //   '{"type": "answer", "answer": " program"}',
    //   '{"type": "answer", "answer": " to"}',
    //   '{"type": "answer", "answer": " calculate"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " sum"}',
    //   '{"type": "answer", "answer": " of"}',
    //   '{"type": "answer", "answer": " two"}',
    //   '{"type": "answer", "answer": " numbers"}',
    //   '{"type": "answer", "answer": ":\\n\\n"}',
    //   '{"type": "answer", "answer": "```"}',
    //   '{"type": "answer", "answer": "python"}',
    //   '{"type": "answer", "answer": "\\n"}',
    //   '{"type": "answer", "answer": "#"}',
    //   '{"type": "answer", "answer": " Function"}',
    //   '{"type": "answer", "answer": " to"}',
    //   '{"type": "answer", "answer": " calculate"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " sum"}',
    //   '{"type": "answer", "answer": " of"}',
    //   '{"type": "answer", "answer": " two"}',
    //   '{"type": "answer", "answer": " numbers"}',
    //   '{"type": "answer", "answer": "\\n"}',
    //   '{"type": "answer", "answer": "def"}',
    //   '{"type": "answer", "answer": " calculate"}',
    //   '{"type": "answer", "answer": "_sum"}',
    //   '{"type": "answer", "answer": "(a"}',
    //   '{"type": "answer", "answer": ", b):\\n"}',
    //   '{"type": "answer", "answer": "    return a + b\\n\\n"}',
    //   '{"type": "answer", "answer": "# Input from the user\\n"}',
    //   '{"type": "answer", "answer": "num1 = float(input(\\"Enter the first number: \\"))\\n"}',
    //   '{"type": "answer", "answer": "num2 = float(input(\\"Enter the second number: \\"))\\n\\n"}',
    //   '{"type": "answer", "answer": "# Calculate the sum\\n"}',
    //   '{"type": "answer", "answer": "result = calculate_sum(num1, num2)\\n\\n"}',
    //   '{"type": "answer", "answer": "# Display the result\\n"}',
    //   '{"type": "answer", "answer": "print(f\\"The sum of {num1} and {num2} is {result}.\\")"}',
    //   '{"type": "answer", "answer": "```\\n\\n"}',
    //   '{"type": "answer", "answer": "This code takes two numbers as input, calculates their sum, and displays the result."}'
    // ];

    // final List<String> mockStreamData = [
    //   '{"type": "answer", "answer": ""}',
    //   '{"type": "answer", "answer": "Here"}',
    //   '{"type": "answer", "answer": " is"}',
    //   '{"type": "answer", "answer": " a"}',
    //   '{"type": "answer", "answer": " simple"}',
    //   '{"type": "answer", "answer": " Python"}',
    //   '{"type": "answer", "answer": " code"}',
    //   '{"type": "answer", "answer": " to"}',
    //   '{"type": "answer", "answer": " calculate"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " sum"}',
    //   '{"type": "answer", "answer": " of"}',
    //   '{"type": "answer", "answer": " two"}',
    //   '{"type": "answer", "answer": " numbers"}',
    //   '{"type": "answer", "answer": ":\\n\\n"}',
    //   '{"type": "answer", "answer": "```"}',
    //   '{"type": "answer", "answer": "python"}',
    //   '{"type": "answer", "answer": "\\n"}',
    //   '{"type": "answer", "answer": "#"}',
    //   '{"type": "answer", "answer": " Python"}',
    //   '{"type": "answer", "answer": " program"}',
    //   '{"type": "answer", "answer": " to"}',
    //   '{"type": "answer", "answer": " calculate"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " sum"}',
    //   '{"type": "answer", "answer": " of"}',
    //   '{"type": "answer", "answer": " two"}',
    //   '{"type": "answer", "answer": " numbers"}',
    //   '{"type": "answer", "answer": "\\n\\n"}',
    //   '{"type": "answer", "answer": "#"}',
    //   '{"type": "answer", "answer": " Input"}',
    //   '{"type": "answer", "answer": " two"}',
    //   '{"type": "answer", "answer": " numbers"}',
    //   '{"type": "answer", "answer": "\\n"}',
    //   '{"type": "answer", "answer": "num"}',
    //   '{"type": "answer", "answer": "1"}',
    //   '{"type": "answer", "answer": " ="}',
    //   '{"type": "answer", "answer": " int"}',
    //   '{"type": "answer", "answer": "(input"}',
    //   '{"type": "answer", "answer": "(\\\""}',
    //   '{"type": "answer", "answer": "Enter"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " first"}',
    //   '{"type": "answer", "answer": " number"}',
    //   '{"type": "answer", "answer": ":"}',
    //   '{"type": "answer", "answer": " \\\"))\\n"}',
    //   '{"type": "answer", "answer": "num"}',
    //   '{"type": "answer", "answer": "2"}',
    //   '{"type": "answer", "answer": " ="}',
    //   '{"type": "answer", "answer": " int"}',
    //   '{"type": "answer", "answer": "(input"}',
    //   '{"type": "answer", "answer": "(\\\""}',
    //   '{"type": "answer", "answer": "Enter"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " second"}',
    //   '{"type": "answer", "answer": " number"}',
    //   '{"type": "answer", "answer": ":"}',
    //   '{"type": "answer", "answer": " \\\""}',
    //   '{"type": "answer", "answer": "))\\n\\n"}',
    //   '{"type": "answer", "answer": "#"}',
    //   '{"type": "answer", "answer": " Calculate"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " sum"}',
    //   '{"type": "answer", "answer": "\\n"}',
    //   '{"type": "answer", "answer": "sum"}',
    //   '{"type": "answer", "answer": "_result"}',
    //   '{"type": "answer", "answer": " ="}',
    //   '{"type": "answer", "answer": " num"}',
    //   '{"type": "answer", "answer": "1"}',
    //   '{"type": "answer", "answer": " +"}',
    //   '{"type": "answer", "answer": " num"}',
    //   '{"type": "answer", "answer": "2"}',
    //   '{"type": "answer", "answer": "\\n\\n"}',
    //   '{"type": "answer", "answer": "#"}',
    //   '{"type": "answer", "answer": " Display"}',
    //   '{"type": "answer", "answer": " the"}',
    //   '{"type": "answer", "answer": " result"}',
    //   '{"type": "answer", "answer": "\\n"}',
    //   '{"type": "answer", "answer": "print"}',
    //   '{"type": "answer", "answer": "(\\\""}',
    //   '{"type": "answer", "answer": "The"}',
    //   '{"type": "answer", "answer": " sum"}',
    //   '{"type": "answer", "answer": " of"}',
    //   '{"type": "answer", "answer": "\\","}',
    //   '{"type": "answer", "answer": " num"}',
    //   '{"type": "answer", "answer": "1"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " \\\""}',
    //   '{"type": "answer", "answer": "and"}',
    //   '{"type": "answer", "answer": "\\","}',
    //   '{"type": "answer", "answer": " num"}',
    //   '{"type": "answer", "answer": "2"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " \\\""}',
    //   '{"type": "answer", "answer": "is"}',
    //   '{"type": "answer", "answer": ":\\","}',
    //   '{"type": "answer", "answer": " sum"}',
    //   '{"type": "answer", "answer": "_result"}',
    //   '{"type": "answer", "answer": ")\\n"}',
    //   '{"type": "answer", "answer": "```\\n\\n"}',
    //   '{"type": "answer", "answer": "###"}',
    //   '{"type": "answer", "answer": " Explanation:\\n"}',
    //   '{"type": "answer", "answer": "1. The `input` function is used to take input from the user.\\n"}',
    //   '{"type": "answer", "answer": "2. The `int` function converts the input into integers (you can use `float` if you want to handle decimal numbers).\\n"}',
    //   '{"type": "answer", "answer": "3. The `+` operator is used to calculate the sum of the two numbers.\\n"}',
    //   '{"type": "answer", "answer": "4. The `print` function displays the result.\\n\\n"}',
    //   '{"type": "answer", "answer": "You can run this code in any Python environment or IDE!"}',
    // ];


    // emojis response

    // final List<String> mockStreamData = [
    //   '{"type": "answer", "answer": ""}',
    //   '{"type": "answer", "answer": "###"}',
    //   '{"type": "answer", "answer": " The"}',
    //   '{"type": "answer", "answer": " Transform"}',
    //   '{"type": "answer", "answer": "ative"}',
    //   '{"type": "answer", "answer": " Power"}',
    //   '{"type": "answer", "answer": " of"}',
    //   '{"type": "answer", "answer": " AI"}',
    //   '{"type": "answer", "answer": " 🌐"}',
    //   '{"type": "answer", "answer": "🤖"}',
    //   '{"type": "answer", "answer": "\\n\\n"}',
    //   '{"type": "answer", "answer": "AI"}',
    //   '{"type": "answer", "answer": " is"}',
    //   '{"type": "answer", "answer": " revolution"}',
    //   '{"type": "answer", "answer": "izing"}',
    //   '{"type": "answer", "answer": " industries"}',
    //   '{"type": "answer", "answer": " and"}',
    //   '{"type": "answer", "answer": " enhancing"}',
    //   '{"type": "answer", "answer": " daily"}',
    //   '{"type": "answer", "answer": " life"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " resh"}',
    //   '{"type": "answer", "answer": "aping"}',
    //   '{"type": "answer", "answer": " how"}',
    //   '{"type": "answer", "answer": " we"}',
    //   '{"type": "answer", "answer": " think"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " work"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " and"}',
    //   '{"type": "answer", "answer": " interact"}',
    //   '{"type": "answer", "answer": ".\\n\\n"}',
    //   '{"type": "answer", "answer": "💡"}',
    //   '{"type": "answer", "answer": " **"}',
    //   '{"type": "answer", "answer": "Why"}',
    //   '{"type": "answer", "answer": " AI"}',
    //   '{"type": "answer", "answer": " Matters"}',
    //   '{"type": "answer", "answer": "**"}',
    //   '{"type": "answer", "answer": "  \\n"}',
    //   '{"type": "answer", "answer": "AI"}',
    //   '{"type": "answer", "answer": " goes"}',
    //   '{"type": "answer", "answer": " beyond"}',
    //   '{"type": "answer", "answer": " automation"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " augment"}',
    //   '{"type": "answer", "answer": "ing"}',
    //   '{"type": "answer", "answer": " human"}',
    //   '{"type": "answer", "answer": " capabilities"}',
    //   '{"type": "answer", "answer": " by"}',
    //   '{"type": "answer", "answer": " analyzing"}',
    //   '{"type": "answer", "answer": " data"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " identifying"}',
    //   '{"type": "answer", "answer": " patterns"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " and"}',
    //   '{"type": "answer", "answer": " making"}',
    //   '{"type": "answer", "answer": " predictions"}',
    //   '{"type": "answer", "answer": "."}',
    //   '{"type": "answer", "answer": " It"}',
    //   '{"type": "answer", "answer": "’s"}',
    //   '{"type": "answer", "answer": " unlocking"}',
    //   '{"type": "answer", "answer": " new"}',
    //   '{"type": "answer", "answer": " possibilities"}',
    //   '{"type": "answer", "answer": " in"}',
    //   '{"type": "answer", "answer": " healthcare"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " education"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " finance"}',
    //   '{"type": "answer", "answer": ","}',
    //   '{"type": "answer", "answer": " and"}',
    //   '{"type": "answer", "answer": " more"}',
    //   '{"type": "answer", "answer": ".\\n\\n"}',
    //   // ... (continues the same way with all your chunks)
    //   '{"type": "answer", "answer": " 👇"}',
    //   '{"type": "metadata", "metadata": {"sources": [], "references": [], "run_id": "dce18d63-b109-4909-ad8f-f7eb57cd57e1", "sources_selected_by_user": [], "chat_agent": "GENERATE", "collection_name": "", "agent_path": "GENERATE", "web_search": null, "invoke_type": "default", "name_of_model": "gpt-4o", "response_language": "English (US)", "title": null}}'
    // ];

    // tabular mockStream data

    final List<String> mockStreamData = [
      '{"type": "answer", "answer": ""}',
      '{"type": "answer", "answer": "Here"}',
      '{"type": "answer", "answer": "\\u2019s"}',
      '{"type": "answer", "answer": " a"}',
      '{"type": "answer", "answer": " concise"}',
      '{"type": "answer", "answer": " table"}',
      '{"type": "answer", "answer": " highlighting"}',
      '{"type": "answer", "answer": " **"}',
      '{"type": "answer", "answer": "two"}',
      '{"type": "answer", "answer": " key"}',
      '{"type": "answer", "answer": " differences"}',
      '{"type": "answer", "answer": "**"}',
      '{"type": "answer", "answer": " between"}',
      '{"type": "answer", "answer": " Python"}',
      '{"type": "answer", "answer": " versions"}',
      '{"type": "answer", "answer": ":\\n\\n"}',
      '{"type": "answer", "answer": "|"}',
      '{"type": "answer", "answer": " **"}',
      '{"type": "answer", "answer": "Version"}',
      '{"type": "answer", "answer": "**"}',
      '{"type": "answer", "answer": "  "}',
      '{"type": "answer", "answer": " |"}',
      '{"type": "answer", "answer": " **"}',
      '{"type": "answer", "answer": "Difference"}',
      '{"type": "answer", "answer": " 1"}',
      '{"type": "answer", "answer": "**"}',
      '{"type": "answer", "answer": " |"}',
      '{"type": "answer", "answer": " **"}',
      '{"type": "answer", "answer": "Difference 2"}',
      '{"type": "answer", "answer": "**"}',
      '{"type": "answer", "answer": " |\\n"}',
      '{"type": "answer", "answer": "|---------------|--------------------------------|"}',
      '{"type": "answer", "answer": "\\n"}',
      '{"type": "answer", "answer": "| **Python 2.x** | `print \\"Hello\\"` is a statement | Strings are ASCII by default. |"}',
      '{"type": "answer", "answer": "\\n"}',
      '{"type": "answer", "answer": "| **Python 3.x** | `print(\\"Hello\\")` is a function | Strings are Unicode by default. |"}',
      '{"type": "answer", "answer": "\\n\\n"}',
      '{"type": "answer", "answer": "Let me know if you\\u2019d like more comparisons or details!"}',
      '{"type": "metadata", "metadata": {"sources": [], "references": [], "run_id": "7c38fc42-2859-415f-83a4-362e50bc0a5e", "sources_selected_by_user": [], "chat_agent": "GENERATE", "collection_name": "", "agent_path": "GENERATE", "web_search": null, "invoke_type": "default", "name_of_model": "gpt-4o", "response_language": "English (US)", "title": null}}',
    ];


    // Simulate delay like real streaming
    for (final line in mockStreamData) {
      final decoded = jsonDecode(line);
      yield decoded["answer"] ?? "";
      await Future.delayed(const Duration(milliseconds: 50));
    }
  }
}
