# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # Fix for domain user ownership issues
    target.build_configurations.each do |config|
      # Remove problematic ownership settings that cause chown errors
      config.build_settings.delete('INSTALL_OWNER')
      config.build_settings.delete('INSTALL_GROUP')

      # Set proper file permissions
      config.build_settings['INSTALL_MODE_FLAG'] = 'u+w,go-w,a+rX'

      # Ensure proper code signing settings
      if config.name == 'Release'
        config.build_settings['CODE_SIGN_IDENTITY'] = 'iPhone Distribution'
      else
        config.build_settings['CODE_SIGN_IDENTITY'] = 'iPhone Developer'
      end
    end
  end

  # Fix file permissions for the entire pods project
  installer.pods_project.build_configurations.each do |config|
    config.build_settings.delete('INSTALL_OWNER')
    config.build_settings.delete('INSTALL_GROUP')
  end
end